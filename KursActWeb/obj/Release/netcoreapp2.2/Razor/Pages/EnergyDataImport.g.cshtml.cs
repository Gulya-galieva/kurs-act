#pragma checksum "D:\Repos\kurs-act-master\KursActWeb\Pages\EnergyDataImport.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8049579870719938e32b5d8c8fc44d7e43f47e26"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Pages_EnergyDataImport), @"mvc.1.0.razor-page", @"/Pages/EnergyDataImport.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/EnergyDataImport.cshtml", typeof(AspNetCore.Pages_EnergyDataImport), null)]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8049579870719938e32b5d8c8fc44d7e43f47e26", @"/Pages/EnergyDataImport.cshtml")]
    public class Pages_EnergyDataImport : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "D:\Repos\kurs-act-master\KursActWeb\Pages\EnergyDataImport.cshtml"
  
    ViewData["Title"] = "Импорт показаний";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(147, 646, true);
            WriteLiteral(@"<script src=""https://cdn.jsdelivr.net/npm/vue/dist/vue.js""></script>

<style>
    .lds-dual-ring {
        display: inline-block;
        width: 64px;
        height: 64px;
        padding-left:50%;
        padding-top: 70px;
        padding-bottom: 70px;
    }

        .lds-dual-ring:after {
            content: "" "";
            display: block;
            width: 43px;
            height: 43px;
            margin: 1px;
            border-radius: 50%;
            border: 5px solid;
            border-color: rgb(0, 174, 255) transparent rgb(0, 174, 255) transparent;
            animation: lds-dual-ring 1.2s linear infinite;
        }

    ");
            EndContext();
            BeginContext(794, 3841, true);
            WriteLiteral(@"@keyframes lds-dual-ring {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }
</style>

<style>
    .input-file {
        background: #fff; /* Цвет фона */
        padding: 50px; /* Поля вокруг текста */
        box-shadow: 0 0 10px rgba(0,0,0,0.5); /* Параметры тени */
        height: 200px;
        width: 100%;
        font-size: 100px;
        color: rgb(0, 174, 255);
        text-align: center;
        cursor: pointer;
    }

        .input-file:hover {
            box-shadow: 0 0 20px rgba(0,0,0,0.5); /* Параметры тени */
        }
</style>

<div class=""shadow p-3 mb-1 rounded"" style=""background-color:#1c2324""><h1 style=""color:white; margin:0""><i class=""fas fa-cloud-upload-alt""></i> Импорт показаний</h1></div>
<div id=""activeArea"">
    <label for=""upload"">
        <i class=""fas fa-file-upload input-file""></i>
        <input id=""upload"" type=""file"" onchange=""handleFiles(this.files)"" class=""input-file"" style=""display:none"" acce");
            WriteLiteral(@"pt=""application/vnd.openxmlformats-officedocument.spreadsheetml.sheet""/>
    </label>
</div>
<div id=""dataTable"">
    <div v-if=""energyRows"" class=""panel"">
        <table class=""table"">
            <thead>
                <tr>
                    <th>Акт №</th>
                    <th>Сериный номер ПУ</th>
                    <th>Т1</th>
                    <th>Т2</th>
                    <th>Сумма</th>
                    <th class=""text-success"" style=""font-size:16px; cursor:pointer; background-color:#e4fbd8;"" onclick=""ImportData()""><a><i class=""fas fa-clipboard-check""></i> Принять</a></th>
                </tr>
            </thead>
            <tbody>
                <tr v-for=""rp in energyRows"">
                    <td><a v-bind:href=""'/RegPoint/Edit/'+rp.Id"">{{ rp.Id }}</a></td>
                    <td>{{ rp.SerialNumber }}</td>
                    <td>{{rp.E_T1}}</td>
                    <td>{{rp.E_T2}}</td>
                    <td>{{rp.E_Sum}}</td>
                </tr>
            </tbody>
        </t");
            WriteLiteral(@"able>
    </div>
</div>


<script>
    var data;

    var dataTable = new Vue({
        el: '#dataTable',
        data: {
            energyRows: data
        }
    })

    function handleFiles(files) {
        let file = files[0];
        let req = new XMLHttpRequest();
        let formData = new FormData();
        formData.append(""file"", file);

        req.onreadystatechange = function () {
            if (req.readyState === 4 && req.status === 200) {
                data = JSON.parse(req.responseText);
                dataTable.energyRows = data;
                document.getElementById(""activeArea"").innerHTML = ''
            }
        }
        req.open(""POST"", '/UploadFile/UploadEnergyData');
        req.send(formData);

        document.getElementById(""activeArea"").innerHTML = '<div class=""lds-dual-ring""></div>';
    }

    function ImportData() {
        fetch('/ImportData/EnergyDataToRegPoints', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            bo");
            WriteLiteral(@"dy: JSON.stringify(data)
        }).then((response) => {
            if (response.ok) {
                dataTable.energyRows = null;
                data = null;
                ShowFileInput();
                ok('Показания успешно записаны в Акты');
            } else { err('Ошибка сервера' + response.statusText); }
        });
    }

    function ShowFileInput() {
        document.getElementById(""activeArea"").innerHTML =
            '<label for=""upload"">' +
            '<i class=""fas fa-file-upload input-file"" ></i>' +
            '<input id=""upload"" type=""file"" onchange=""handleFiles(this.files)"" class=""input-file"" style=""display:none"" accept=""application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"" />' +
            '</label >';
    }
</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<KursActWeb.Pages.EnergyDataImportModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<KursActWeb.Pages.EnergyDataImportModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<KursActWeb.Pages.EnergyDataImportModel>)PageContext?.ViewData;
        public KursActWeb.Pages.EnergyDataImportModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
