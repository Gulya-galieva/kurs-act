@page
@model KursActWeb.Pages.PaymentReportsModel
@{
    ViewData["Title"] = "Отчеты по СМР";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="shadow p-3 mb-1 rounded" style="background-color:#1c2324"><h1 style="color:white; margin:0"><i class="fas fa-file-contract"></i> Отчетность по СМР</h1></div>

@foreach (var wd in Model.WorkerDevices)
{
<div class="panel p-3 shadow">
    <h3><i class="fas fa-user-tie"></i> @wd.Name</h3>
    <h4>
        На оплату (Всего/Проверены/УСПД):
        <i class="fas fa-clipboard-list p-1"></i> @wd.Points.Count(d => d.RegPointStatus == DbManager.RegPointStatus.Default)
        <i class="fas fa-clipboard-check p-1 text-warning"></i> @wd.Points.Count(d => d.RegPointStatus == DbManager.RegPointStatus.Default && d.IsLinkOk)
        <i class="fab fa-hubspot p-1 text-warning"></i> @wd.Points.Count(d => d.RegPointStatus == DbManager.RegPointStatus.USPD)
    </h4>
    <div class="d-flex flex-wrap">
        @foreach (var month in wd.Months)
        {
            @await Html.PartialAsync("_PaymentReportMonthCard", month)
        }
    </div>
</div>
}

@{int summ = 0, summInReport = 0;}
@foreach (var wd in Model.WorkerDevices)
{
    summ += wd.Points.Count;
    summInReport += wd.Points.Count(p => p.IsInPayReportAlready);
}
<h3>Всего точек: @summ</h3>
<h3>Включены в отчеты: @summInReport</h3>
<h3>Не включены в отчеты: @(summ - summInReport)</h3>

<script>
    //Создать отчет на оплату
    function CreatePaymentReport(workerId, year, month, day) {
        //alert('Создать отчет workerId:' + workerId + ' year:' + year + ' month:' + month + ' day:' + day);
        //return;
        let actTypeName = 'Аванс';
        if (day === 16) { actTypeName = 'Расчет'; }
        Swal.fire({
            title: 'Создать акт "' + actTypeName + '"?',
            type: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Cоздать'
        }).then((result) => {
            if (result.value) {
                fetch('PaymentReport/Create',
                    {
                        method: 'POST',
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ workerId: workerId, year: year, month: month, day: day })
                    }).then(r => { if (r.ok) { return r.text() } })
                    .then(data => {
                        if (data) document.location = '/PaymentReportPage/' + data;
                    });
            }
        });
    }
</script>